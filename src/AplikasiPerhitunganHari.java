
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.time.LocalDate;
import java.time.Year;
import java.time.YearMonth;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author HADI PC
 */
public class AplikasiPerhitunganHari extends javax.swing.JFrame {

    /**
     * Creates new form AplikasiPerhitunganHari
     */
    public AplikasiPerhitunganHari() {
        initComponents();

        // Sinkronisasi perubahan dari jCalendar1 ke cbbBulan dan spTahun
        jCalendar1.getDayChooser().addPropertyChangeListener("day", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                syncFromCalendar();
            }
        });

        jCalendar1.addPropertyChangeListener("calendar", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                syncFromCalendar();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbBulan = new javax.swing.JComboBox<>();
        spTahun = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHasil = new javax.swing.JTextArea();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        btnHitung = new javax.swing.JButton();
        dateChooserSelisih = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aplikasi Perhitungan Hari", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Masukkan Tahun");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Masukkan Bulan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(jLabel2, gridBagConstraints);

        cbbBulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        cbbBulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbBulanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(cbbBulan, gridBagConstraints);

        spTahun.setModel(new javax.swing.SpinnerNumberModel(2024, 2000, null, 1));
        spTahun.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spTahunStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(spTahun, gridBagConstraints);

        txtHasil.setColumns(20);
        txtHasil.setLineWrap(true);
        txtHasil.setRows(5);
        jScrollPane1.setViewportView(txtHasil);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(jCalendar1, gridBagConstraints);

        btnHitung.setText("Hitung");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(btnHitung, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(dateChooserSelisih, gridBagConstraints);

        jLabel3.setText("Selisih Dengan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        jPanel1.add(jLabel3, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        hitungHari();
    }//GEN-LAST:event_btnHitungActionPerformed

    private void cbbBulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbBulanActionPerformed
        syncToCalendar();
    }//GEN-LAST:event_cbbBulanActionPerformed

    private void spTahunStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spTahunStateChanged
        syncToCalendar();    }//GEN-LAST:event_spTahunStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiPerhitunganHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiPerhitunganHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiPerhitunganHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiPerhitunganHari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiPerhitunganHari().setVisible(true);
            }
        });
    }

    private void hitungHari() {
        int tahun = (int) spTahun.getValue();
        int bulan = cbbBulan.getSelectedIndex() + 1; // ComboBox mulai dari index 0, jadi tambahkan 1

        // Gunakan YearMonth untuk mendapatkan jumlah hari dalam bulan
        YearMonth yearMonth = YearMonth.of(tahun, bulan);
        int jumlahHari = yearMonth.lengthOfMonth();

        // Periksa apakah tahun tersebut adalah tahun kabisat
        boolean isKabisat = Year.isLeap(tahun);
        String statusKabisat = isKabisat ? "tahun kabisat" : "bukan tahun kabisat";

        // Tentukan hari pertama dan terakhir dalam bulan
        LocalDate firstDay = yearMonth.atDay(1);
        LocalDate lastDay = yearMonth.atEndOfMonth();

        // Ambil tanggal dari JDateChooser (dateChooserSelisih)
        Date dateChooserDate = dateChooserSelisih.getDate();
        LocalDate selectedDateChooser = dateChooserDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        // Ambil tanggal dari JCalendar (jCalendar1)
        Date selectedDateCalendar = jCalendar1.getDate();
        LocalDate selectedDateCalendarLocal = selectedDateCalendar.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        // Hitung selisih dalam hari
        long selisihHari = ChronoUnit.DAYS.between(selectedDateCalendarLocal, selectedDateChooser);

        // Tampilkan hasil pada txtHasil
        txtHasil.setText("Bulan " + cbbBulan.getSelectedItem() + " tahun " + tahun + " memiliki " + jumlahHari + " hari.\n"
                + "Ini adalah " + statusKabisat + ".\n"
                + "Hari pertama bulan ini adalah: " + firstDay.getDayOfWeek() + ", " + firstDay + ".\n"
                + "Hari terakhir bulan ini adalah: " + lastDay.getDayOfWeek() + ", " + lastDay + ".\n"
                + "Selisih antara tanggal yang dipilih di JCalendar (" + selectedDateCalendarLocal + ") dan "
                + "tanggal yang dipilih di JDateChooser (" + selectedDateChooser + ") adalah: " + selisihHari + " hari.");
    }

    private void syncFromCalendar() {
        Date selectedDate = jCalendar1.getDate();
        LocalDate localDate = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        // Update ComboBox bulan dan Spinner tahun sesuai dengan tanggal di JCalendar
        cbbBulan.setSelectedIndex(localDate.getMonthValue() - 1); // Bulan di ComboBox berbasis index mulai dari 0
        spTahun.setValue(localDate.getYear());
    }

    private void syncToCalendar() {
        int tahun = (int) spTahun.getValue();
        int bulan = cbbBulan.getSelectedIndex() + 1; // ComboBox mulai dari 0, jadi tambahkan 1
        int hari = jCalendar1.getDayChooser().getDay(); // Tetap menggunakan hari yang dipilih

        // Buat tanggal baru berdasarkan tahun, bulan, dan hari yang dipilih
        LocalDate localDate = LocalDate.of(tahun, bulan, Math.min(hari, YearMonth.of(tahun, bulan).lengthOfMonth()));
        Date newDate = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());

        // Update jCalendar1 tanpa memicu event tambahan
        jCalendar1.setDate(newDate);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHitung;
    private javax.swing.JComboBox<String> cbbBulan;
    private com.toedter.calendar.JDateChooser dateChooserSelisih;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spTahun;
    private javax.swing.JTextArea txtHasil;
    // End of variables declaration//GEN-END:variables
}
